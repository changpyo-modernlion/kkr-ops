apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "account.fullname" . }}
  labels:
    {{- include "account.labels" . | nindent 4 }}
    {{- include "account.datadogLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "account.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "account.selectorLabels" . | nindent 8 }}
        {{- include "account.datadogSelectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: {{ include "account.fullname" . }}-database
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: {{ include "account.fullname" . }}-database
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ include "account.fullname" . }}-database
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database
                  name: {{ include "account.fullname" . }}-database
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: {{ include "account.fullname" . }}-database
            - name: DB_ENGINE
              valueFrom:
                secretKeyRef:
                  key: engine
                  name: {{ include "account.fullname" . }}-database
            - name: ALCHEMY_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: alchemyApiKey
                  name: {{ include "account.fullname" . }}
            - name: ALCHEMY_HOST
              valueFrom:
                configMapKeyRef:
                  key: alchemyHost
                  name: {{ include "account.fullname" . }}
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_PROFILING_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: ddProfilingEnabled
                  name: {{ include "account.fullname" . }}-datadog
            - name: DD_LOGS_INJECTION
              valueFrom:
                configMapKeyRef:
                  key: ddLogsInjectionEnabled
                  name: {{ include "account.fullname" . }}-datadog
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
